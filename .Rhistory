", ",ifelse(sum.cox_dfs$sctest[3]<0.001, paste("p < 0.001"), paste("p = ", format(round(sum.cox_dfs$sctest[3],2), nsmall=2),sep=""))), size = 5)
plot_km_dfs
plot_km_dfs=ggsurvplot(km_dfs,
data = df_dfs1,
risk.table = TRUE,
censor.shape="|",
censor.size = 1.4,
conf.int = F,
xlim = c(0,75),
xlab = "Time, Months",
ylab = "Event-free survival probability",
break.time.by = 3,
ggtheme = theme_classic(),
palette=c("cornflowerblue", "maroon"),
linetype = c(1,5),
legend.labs=c("Immunotherapy Arm","Placebo Arm"),
risk.table.y.text = F,
risk.table.fontsize=3,
legend=c(0.12,0.2),
tables.theme = theme_cleantable(),
title="Extracted Individual Patient Data\nGeparNuevo, I-SPY 2, Keynote 522, IMpassion031\nTreatment x Control")
plot_km_dfs$plot=plot_km_dfs$plot+ggplot2::annotate("text", hjust = 0,
x = 0, y = 0.5,
label = paste0("Marginal hazard ratio (95%-CI)\n",
paste0(format(round(sum.cox_dfs$conf.int[1,1],2), nsmall=2), " (", format(round(sum.cox_dfs$conf.int[1,3],2), nsmall=2), "-", format(round(sum.cox_dfs$conf.int[1,4],2), nsmall=2), ")"),
", ",ifelse(sum.cox_dfs$sctest[3]<0.001, paste("p < 0.001"), paste("p = ", format(round(sum.cox_dfs$sctest[3],2), nsmall=2),sep=""))), size = 5)
plot_km_dfs
plot_km_dfs=ggsurvplot(km_dfs,
data = df_dfs1,
risk.table = TRUE,
censor.shape="|",
censor.size = 1.4,
conf.int = F,
xlim = c(0,75),
xlab = "Time, Months",
ylab = "Event-free survival probability",
break.time.by = 3,
ggtheme = theme_classic(),
palette=c("cornflowerblue", "maroon"),
linetype = c(1,6),
legend.labs=c("Immunotherapy Arm","Placebo Arm"),
risk.table.y.text = F,
risk.table.fontsize=3,
legend=c(0.12,0.2),
tables.theme = theme_cleantable(),
title="Extracted Individual Patient Data\nGeparNuevo, I-SPY 2, Keynote 522, IMpassion031\nTreatment x Control")
plot_km_dfs$plot=plot_km_dfs$plot+ggplot2::annotate("text", hjust = 0,
x = 0, y = 0.5,
label = paste0("Marginal hazard ratio (95%-CI)\n",
paste0(format(round(sum.cox_dfs$conf.int[1,1],2), nsmall=2), " (", format(round(sum.cox_dfs$conf.int[1,3],2), nsmall=2), "-", format(round(sum.cox_dfs$conf.int[1,4],2), nsmall=2), ")"),
", ",ifelse(sum.cox_dfs$sctest[3]<0.001, paste("p < 0.001"), paste("p = ", format(round(sum.cox_dfs$sctest[3],2), nsmall=2),sep=""))), size = 5)
plot_km_dfs
plot_km_dfs=ggsurvplot(km_dfs,
data = df_dfs1,
risk.table = TRUE,
censor.shape="|",
censor.size = 1.4,
conf.int = F,
xlim = c(0,75),
xlab = "Time, Months",
ylab = "Event-free survival probability",
break.time.by = 3,
ggtheme = theme_classic(),
palette=c("cornflowerblue", "maroon"),
linetype = c(1,7),
legend.labs=c("Immunotherapy Arm","Placebo Arm"),
risk.table.y.text = F,
risk.table.fontsize=3,
legend=c(0.12,0.2),
tables.theme = theme_cleantable(),
title="Extracted Individual Patient Data\nGeparNuevo, I-SPY 2, Keynote 522, IMpassion031\nTreatment x Control")
plot_km_dfs$plot=plot_km_dfs$plot+ggplot2::annotate("text", hjust = 0,
x = 0, y = 0.5,
label = paste0("Marginal hazard ratio (95%-CI)\n",
paste0(format(round(sum.cox_dfs$conf.int[1,1],2), nsmall=2), " (", format(round(sum.cox_dfs$conf.int[1,3],2), nsmall=2), "-", format(round(sum.cox_dfs$conf.int[1,4],2), nsmall=2), ")"),
", ",ifelse(sum.cox_dfs$sctest[3]<0.001, paste("p < 0.001"), paste("p = ", format(round(sum.cox_dfs$sctest[3],2), nsmall=2),sep=""))), size = 5)
plot_km_dfs
plot_km_dfs=ggsurvplot(km_dfs,
data = df_dfs1,
risk.table = TRUE,
censor.shape="|",
censor.size = 1.4,
conf.int = F,
xlim = c(0,75),
xlab = "Time, Months",
ylab = "Event-free survival probability",
break.time.by = 3,
ggtheme = theme_classic(),
palette=c("cornflowerblue", "maroon"),
linetype = c(1,8),
legend.labs=c("Immunotherapy Arm","Placebo Arm"),
risk.table.y.text = F,
risk.table.fontsize=3,
legend=c(0.12,0.2),
tables.theme = theme_cleantable(),
title="Extracted Individual Patient Data\nGeparNuevo, I-SPY 2, Keynote 522, IMpassion031\nTreatment x Control")
plot_km_dfs$plot=plot_km_dfs$plot+ggplot2::annotate("text", hjust = 0,
x = 0, y = 0.5,
label = paste0("Marginal hazard ratio (95%-CI)\n",
paste0(format(round(sum.cox_dfs$conf.int[1,1],2), nsmall=2), " (", format(round(sum.cox_dfs$conf.int[1,3],2), nsmall=2), "-", format(round(sum.cox_dfs$conf.int[1,4],2), nsmall=2), ")"),
", ",ifelse(sum.cox_dfs$sctest[3]<0.001, paste("p < 0.001"), paste("p = ", format(round(sum.cox_dfs$sctest[3],2), nsmall=2),sep=""))), size = 5)
plot_km_dfs
plot_km_dfs=ggsurvplot(km_dfs,
data = df_dfs1,
risk.table = TRUE,
censor.shape="|",
censor.size = 1.4,
conf.int = F,
xlim = c(0,75),
xlab = "Time, Months",
ylab = "Event-free survival probability",
break.time.by = 3,
ggtheme = theme_classic(),
palette=c("cornflowerblue", "maroon"),
linetype = c(1,2),
legend.labs=c("Immunotherapy Arm","Placebo Arm"),
risk.table.y.text = F,
risk.table.fontsize=3,
legend=c(0.12,0.2),
tables.theme = theme_cleantable(),
title="Extracted Individual Patient Data\nGeparNuevo, I-SPY 2, Keynote 522, IMpassion031\nTreatment x Control")
plot_km_dfs$plot=plot_km_dfs$plot+ggplot2::annotate("text", hjust = 0,
x = 0, y = 0.5,
label = paste0("Marginal hazard ratio (95%-CI)\n",
paste0(format(round(sum.cox_dfs$conf.int[1,1],2), nsmall=2), " (", format(round(sum.cox_dfs$conf.int[1,3],2), nsmall=2), "-", format(round(sum.cox_dfs$conf.int[1,4],2), nsmall=2), ")"),
", ",ifelse(sum.cox_dfs$sctest[3]<0.001, paste("p < 0.001"), paste("p = ", format(round(sum.cox_dfs$sctest[3],2), nsmall=2),sep=""))), size = 5)
plot_km_dfs
plot_km_dfs=ggsurvplot(km_dfs,
data = df_dfs1,
risk.table = TRUE,
censor.shape="|",
censor.size = 1.4,
conf.int = F,
xlim = c(0,75),
xlab = "Time, Months",
ylab = "Event-free survival probability",
break.time.by = 3,
ggtheme = theme_classic(),
palette=c("cornflowerblue", "maroon"),
linetype = c('dotted','dash'),
legend.labs=c("Immunotherapy Arm","Placebo Arm"),
risk.table.y.text = F,
risk.table.fontsize=3,
legend=c(0.12,0.2),
tables.theme = theme_cleantable(),
title="Extracted Individual Patient Data\nGeparNuevo, I-SPY 2, Keynote 522, IMpassion031\nTreatment x Control")
plot_km_dfs$plot=plot_km_dfs$plot+ggplot2::annotate("text", hjust = 0,
x = 0, y = 0.5,
label = paste0("Marginal hazard ratio (95%-CI)\n",
paste0(format(round(sum.cox_dfs$conf.int[1,1],2), nsmall=2), " (", format(round(sum.cox_dfs$conf.int[1,3],2), nsmall=2), "-", format(round(sum.cox_dfs$conf.int[1,4],2), nsmall=2), ")"),
", ",ifelse(sum.cox_dfs$sctest[3]<0.001, paste("p < 0.001"), paste("p = ", format(round(sum.cox_dfs$sctest[3],2), nsmall=2),sep=""))), size = 5)
plot_km_dfs
plot_km_dfs=ggsurvplot(km_dfs,
data = df_dfs1,
risk.table = TRUE,
censor.shape="|",
censor.size = 1.4,
conf.int = F,
xlim = c(0,75),
xlab = "Time, Months",
ylab = "Event-free survival probability",
break.time.by = 3,
ggtheme = theme_classic(),
palette=c("cornflowerblue", "maroon"),
linetype = c('dotted',1),
legend.labs=c("Immunotherapy Arm","Placebo Arm"),
risk.table.y.text = F,
risk.table.fontsize=3,
legend=c(0.12,0.2),
tables.theme = theme_cleantable(),
title="Extracted Individual Patient Data\nGeparNuevo, I-SPY 2, Keynote 522, IMpassion031\nTreatment x Control")
plot_km_dfs$plot=plot_km_dfs$plot+ggplot2::annotate("text", hjust = 0,
x = 0, y = 0.5,
label = paste0("Marginal hazard ratio (95%-CI)\n",
paste0(format(round(sum.cox_dfs$conf.int[1,1],2), nsmall=2), " (", format(round(sum.cox_dfs$conf.int[1,3],2), nsmall=2), "-", format(round(sum.cox_dfs$conf.int[1,4],2), nsmall=2), ")"),
", ",ifelse(sum.cox_dfs$sctest[3]<0.001, paste("p < 0.001"), paste("p = ", format(round(sum.cox_dfs$sctest[3],2), nsmall=2),sep=""))), size = 5)
plot_km_dfs=ggsurvplot(km_dfs,
data = df_dfs1,
risk.table = TRUE,
censor.shape="|",
censor.size = 1.4,
conf.int = F,
xlim = c(0,75),
xlab = "Time, Months",
ylab = "Event-free survival probability",
break.time.by = 3,
ggtheme = theme_classic(),
palette=c("cornflowerblue", "maroon"),
linetype = c(1,3),
legend.labs=c("Immunotherapy Arm","Placebo Arm"),
risk.table.y.text = F,
risk.table.fontsize=3,
legend=c(0.12,0.2),
tables.theme = theme_cleantable(),
title="Extracted Individual Patient Data\nGeparNuevo, I-SPY 2, Keynote 522, IMpassion031\nTreatment x Control")
plot_km_dfs$plot=plot_km_dfs$plot+ggplot2::annotate("text", hjust = 0,
x = 0, y = 0.5,
label = paste0("Marginal hazard ratio (95%-CI)\n",
paste0(format(round(sum.cox_dfs$conf.int[1,1],2), nsmall=2), " (", format(round(sum.cox_dfs$conf.int[1,3],2), nsmall=2), "-", format(round(sum.cox_dfs$conf.int[1,4],2), nsmall=2), ")"),
", ",ifelse(sum.cox_dfs$sctest[3]<0.001, paste("p < 0.001"), paste("p = ", format(round(sum.cox_dfs$sctest[3],2), nsmall=2),sep=""))), size = 5)
plot_km_dfs
plot_km_dfs=ggsurvplot(km_dfs,
data = df_dfs1,
risk.table = TRUE,
censor.shape="|",
censor.size = 1.4,
conf.int = F,
xlim = c(0,75),
xlab = "Time, Months",
ylab = "Event-free survival probability",
break.time.by = 3,
ggtheme = theme_classic(),
palette=c("black", "gray"),
linetype = c(1,1),
legend.labs=c("Immunotherapy Arm","Placebo Arm"),
risk.table.y.text = F,
risk.table.fontsize=3,
legend=c(0.12,0.2),
tables.theme = theme_cleantable(),
title="Extracted Individual Patient Data\nGeparNuevo, I-SPY 2, Keynote 522, IMpassion031\nTreatment x Control")
plot_km_dfs$plot=plot_km_dfs$plot+ggplot2::annotate("text", hjust = 0,
x = 0, y = 0.5,
label = paste0("Marginal hazard ratio (95%-CI)\n",
paste0(format(round(sum.cox_dfs$conf.int[1,1],2), nsmall=2), " (", format(round(sum.cox_dfs$conf.int[1,3],2), nsmall=2), "-", format(round(sum.cox_dfs$conf.int[1,4],2), nsmall=2), ")"),
", ",ifelse(sum.cox_dfs$sctest[3]<0.001, paste("p < 0.001"), paste("p = ", format(round(sum.cox_dfs$sctest[3],2), nsmall=2),sep=""))), size = 5)
plot_km_dfs
plot_km_dfs=ggsurvplot(km_dfs,
data = df_dfs1,
risk.table = TRUE,
censor.shape="|",
censor.size = 1.4,
conf.int = F,
xlim = c(0,75),
xlab = "Time, Months",
ylab = "Event-free survival probability",
break.time.by = 3,
ggtheme = theme_classic(),
palette=c("black", "gray"),
linetype = c(1,1),
legend.labs=c("Immunotherapy Arm","Placebo Arm"),
risk.table.y.text = F,
risk.table.fontsize=3,
legend=c(0.12,0.2),
tables.theme = theme_cleantable(),
title="Extracted Individual Patient Data\nGeparNuevo, I-SPY 2, Keynote 522, IMpassion031\nTreatment x Control")
plot_km_dfs$plot=plot_km_dfs$plot+ggplot2::annotate("text", hjust = 0,
x = 0, y = 0.5,
label = paste0("Marginal hazard ratio (95%-CI)\n",
paste0(format(round(sum.cox_dfs$conf.int[1,1],2), nsmall=2), " (", format(round(sum.cox_dfs$conf.int[1,3],2), nsmall=2), "-", format(round(sum.cox_dfs$conf.int[1,4],2), nsmall=2), ")"),
", ",ifelse(sum.cox_dfs$sctest[3]<0.001, paste("p < 0.001"), paste("p = ", format(round(sum.cox_dfs$sctest[3],2), nsmall=2),sep=""))), size = 5)
plot_km_dfs
tbl_survfit
km_os=survfit(Surv(time, status) ~ rx, data=df_os1)
rkm_os=survfit(Surv(time, censor) ~ rx, data=df_os1)
plot_km_os=ggsurvplot(km_os,
data = df_os1,
risk.table = TRUE,
censor.shape="|",
censor.size = 1.4,
conf.int = F,
xlim = c(0,60),
xlab = "Time, Months",
ylab = "Overall survival probability",
break.time.by = 3,
ggtheme = theme_classic(),
palette=c("cornflowerblue", "maroon"),
linetype = c(1,1,1,1,1,1),
legend.labs=c("Immunotherapy Arm","Placebo Arm"),
risk.table.y.text = F,
risk.table.fontsize=3,
legend=c(0.12,0.2),
tables.theme = theme_cleantable(),
title="Extracted Individual Patient Data\nGeparNuevo, Keynote 522, IMpassion031\nTreatment x Control")
plot_km_os$plot=plot_km_os$plot+ggplot2::annotate("text", hjust = 0,
x = 0, y = 0.5,
label = paste0("Marginal hazard ratio (95%-CI)\n",
paste0(format(round(sum.cox_os$conf.int[1,1],2), nsmall=2), " (", format(round(sum.cox_os$conf.int[1,3],2), nsmall=2), "-", format(round(sum.cox_os$conf.int[1,4],2), nsmall=2), ")"),
", ",ifelse(sum.cox_os$sctest[3]<0.001, paste("p < 0.001"), paste("p = ", format(round(sum.cox_os$sctest[3],2), nsmall=2),sep=""))), size = 5)
plot_km_os
plot_km_os=ggsurvplot(km_os,
data = df_os1,
risk.table = TRUE,
censor.shape="|",
censor.size = 1.4,
conf.int = F,
xlim = c(0,60),
xlab = "Time, Months",
ylab = "Overall survival probability",
break.time.by = 3,
ggtheme = theme_classic(),
palette=c("black", "gray"),
linetype = c(1,1,1,1,1,1),
legend.labs=c("Immunotherapy Arm","Placebo Arm"),
risk.table.y.text = F,
risk.table.fontsize=3,
legend=c(0.12,0.2),
tables.theme = theme_cleantable(),
title="Extracted Individual Patient Data\nGeparNuevo, Keynote 522, IMpassion031\nTreatment x Control")
plot_km_os$plot=plot_km_os$plot+ggplot2::annotate("text", hjust = 0,
x = 0, y = 0.5,
label = paste0("Marginal hazard ratio (95%-CI)\n",
paste0(format(round(sum.cox_os$conf.int[1,1],2), nsmall=2), " (", format(round(sum.cox_os$conf.int[1,3],2), nsmall=2), "-", format(round(sum.cox_os$conf.int[1,4],2), nsmall=2), ")"),
", ",ifelse(sum.cox_os$sctest[3]<0.001, paste("p < 0.001"), paste("p = ", format(round(sum.cox_os$sctest[3],2), nsmall=2),sep=""))), size = 5)
plot_km_os
mode(c(0, 1))
length(c(0, 1))
attributes(c(0, 1))
dim(c(0, 1))
dim(c(0, 1)) <- c(1,1)
# 3.1 Listas são coletâneas, conjuntos de objetos, não necessariamente de mesmo tipo
x <- c(0, 1)
dim(x) <- c(1,1)
dim(x) <- c(1,2)
x
# 3.1 Listas são coletâneas, conjuntos de objetos, não necessariamente de mesmo tipo
matrix(1:10)
# 3.1 Listas são coletâneas, conjuntos de objetos, não necessariamente de mesmo tipo
matrix(1:10, nrow=3)
# 4.1 Dataframes são conjunto de objetos dispostos em colunas e linhas, não necessariamente do mesmo tipo
dataframe(num = 1:10, let = rep('10', 10))
# 4.1 Dataframes são conjunto de objetos dispostos em colunas e linhas, não necessariamente do mesmo tipo
data.frame(num = 1:10, let = rep('10', 10))
# 4.1 Dataframes são conjunto de objetos dispostos em colunas e linhas, não necessariamente do mesmo tipo
data.frame(num = 1:10, let = rep(c('10', '11'), 10))
# 4.1 Dataframes são conjunto de objetos dispostos em colunas e linhas, não necessariamente do mesmo tipo
data.frame(num = 1:10, let = rep(c('A', '11'), 10))
?sample
sample(c('1'), 10)
sample(c('1'), 10, replace = T)
example(sample)
sample(10)
sample(20)
is.vector(c('1'))
is.vector(1
)
x <- 1
is.vector(x)
x <- 'dasda'
is.vector(x)
mode(x)
rep(10)
rep(10, 2)
rep(10, 5)
rep(10, 5)
matrix(1:20, nrow=2, ncol=10, byrow = T)
?seq
?seq_along
1+1
5/2
5*5
# ============================================================================ #
# 1. Introdução ao R, R Studio e Objetos em R  #
# Autor: Felippe Lazar Neto, 2023-2            #
# ============================================================================ #
# R é uma linguagem de programação derivada de uma outra linguagem chamada S
# A base de uma linguagem de programação são objetos e funções.
# Objetos são unidades de informação criadas durante o ato de programar (a partir do sinal <-)
# As funções funcionam como criadores ou modificadores ou executores de ações a partir de objetos
# As funções possuem argumentos (informações necessárias para realizar determinada ação) - orientações de programar
# As instruções para cada função podem ser acessadas com o '?' antes do nome da função
# Unidades Basicas de Programação - Tipos de Objetos
# Vetores são o objeto mais básico de R - são uma coletânea de componentes de mesmo tipo
# criados a partir da função c()
# 1.1 Vetores Numéricos
# 1.2 Vetores de Caracteres (String)
# 1.3 Vetores Booleanos (Verdadeiro ou Falso)
# 1.4 Vetores de Fator (variável nominal de R - representação número/caracter)
# 2.1 Matrizes são elementos em array com mais de uma dimensão, com componentes do mesmo tipo
# 3.1 Listas são coletâneas, conjuntos de objetos, não necessariamente de mesmo tipo
# 4.1 Dataframes são conjunto de objetos dispostos em colunas e linhas, não necessariamente do mesmo tipo
c(0, 1, 2, 3, 4)
c(0, 1, 2, 3, 4)
# 1.1 Vetores Numéricos
x <- c(0, 1, 2, 3, 4)
x
x <- 2
x <- c(2)
x <- 2
# 1.1 Vetores Numéricos
x <- c(0, 1, 2, 3, 4)
mean(x)
?mean
# 1.1 Vetores Numéricos
x <- c(0, 1, 2, 3, 4)
mode(x)
1:20
?seq
seq(from = 1, to = 20)
seq(from = 1, to = 20, by = 0.5)
seq_meio_a_meio <- seq(from = 1, to = 20, by = 0.5)
seq_meio_a_meio
seq_meio_a_meio + 1
peso <- seq(from = 60, to = 90, by = 1)
alt <- seq(from = 170, to 200, by = 1)
alt <- seq(from = 170, to = 200, by = 1)
peso
alt
peso * alt
frutas <- c('banana', 'abacaxi', 'uva')
frutas
mode(frutas)
frutas/1
frutas * 1
boolean_vec <- c(TRUE, FALSE, TRUE, FALSE)
boolean_vec
peso
peso > 70
boolean_peso_maior70 <- peso > 70
boolean_peso_maior70
sum(boolean_peso_maior70)
eman(boolean_peso_maior70)
mean(boolean_peso_maior70)
sum(boolean_peso_maior70)/length(peso)
summary(peso)
# 1.4 Vetores de Fator (factor) (variável nominal de R - representação número/caracter)
sexo_amostra <- c(0, 1, 1, 1, 0, 1, 0, 1)
sexo_amostra <- c('F', 'M', 'M', 'M', 'F', 'M', 'F', 'M')
# 1.4 Vetores de Fator (factor) (variável nominal de R - representação número/caracter)
sexo_amostra_num <- c(0, 1, 1, 1, 0, 1, 0, 1)
sexo_amostra_chr <- c('F', 'M', 'M', 'M', 'F', 'M', 'F', 'M')
mode(sexo_amostra_num)
mode(sexo_amostra_chr)
sexo_amostra_fct <- factor(sexo_amostra_num, levels = c(0, 1), labels = c('F', 'M'))
mode(sexo_amostra_fct)
sexo_amostra_fct
as.numeric(sexo_amostra_chr)
as.numeric(sexo_amostra_fct)
as.factor(sexo_amostra_chr)
as.numeric(as.factor(sexo_amostra_chr))
sexo_amostra_fct <- factor(sexo_amostra_chr, levels = c('F', 'M'))
sexo_amostra_fct
as.numeric(sexo_amostra_fct)
sexo_amostra_fct <- factor(sexo_amostra_chr, levels = c('F', 'M'))
as.numeric(sexo_amostra_fct)
# 2.1 Matrizes são elementos em array com mais de uma dimensão, com componentes do mesmo tipo
?matrix
matrix(1:20, nrow=5, ncol=4)
matrix_numerico <- matrix(1:20, nrow=5, ncol=4)
matrix_numerico
# 3.1 Listas são coletâneas, conjuntos de objetos, não necessariamente de mesmo tipo
list(lista_peso = peso, lista_alt = alt, lista_sexo = sexo_amostra_fct)
# 3.1 Listas são coletâneas, conjuntos de objetos, não necessariamente de mesmo tipo
lista_vars <- list(lista_peso = peso, lista_alt = alt, lista_sexo = sexo_amostra_fct)
lista_vars
lista_vars$lista_peso
# 3.1 Listas são coletâneas, conjuntos de objetos, não necessariamente de mesmo tipo
lista_vars <- list(lista_peso = peso, lista_alt = alt, lista_sexo = sexo_amostra_fct, lista_matrix = matrix_numerico)
lista_vars
# 4.1 Dataframes são conjunto de objetos dispostos em colunas e linhas, não necessariamente do mesmo tipo
?sample
sample(frutas, 10)
frutas
sample(frutas, 10, replace = TRUE)
df_mix <- data.frame(nome = sample(c('Joao', 'Maria', 'Gabriel'), 50, replace = TRUE),
altura = sample(alt, 50, replace = TRUE),
peso = sample(peso, 50, replace = TRUE))
df_miox
df_mix
View(df_mix)
str(df_mix)
df_mix$nome
df_mix$altura
df_mix$peso
df_mix$imc <- df_mix$peso/(df_mix$altura/100*df_mix$altura/100)
View(df_mix)
df_mix$imc_maior_25 <- df_mix$imc > 25
View(df_mix)
df_mix$imc_maior_25 <- as.numeric(df_mix$imc > 25)
View(df_mix)
mean(df_mix$imc_maior_25)
?ifelse
ifelse(df_mix$imc > 25, 'sobrepeso', 'normal')
df_mix$sobrepeso_obesidade <- ifelse(df_mix$imc > 25, 'sobrepeso', 'normal')
View(df_mix)
# Subsetting
alt
# Subsetting
alt[5]
# Subsetting
alt[5:10]
# Lista
lista_vars
# Lista
lista_vars$lista_peso
# Lista
lista_vars[[1]]
# Lista
lista_vars[['lista_peso']]
alt[alt > 15]
alt
alt[alt > 197]
alt > 197
alt[alt > 197]
# Dataframe
df_mix$peso
# Dataframe
df_mix$peso[df_mix$imc > 25]
# df_mix[ linhas, colunas]
df_mix[1, ]
df_mix[1, 'peso']
df_mix[1, c('nome', 'altura')]
alt[126]
alt[
alt
alt
alt[1] <- 200
alt
alt[alt > 197]
df_mix$nome
df_mix$nome == 'Maria'
df_mix_maria <- df_mix[df_mix$nome == 'Maria', ]
View(df_mix_maria)
